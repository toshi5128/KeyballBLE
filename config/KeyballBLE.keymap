#define ZMK_POINTING_DEFAULT_SCRL_VAL 120    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        ROTATE: ROTATE {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "ROTATE";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W         &kp E         &kp R      &kp T                                      &kp Y        &kp U  &kp I      &kp O    &lt 5 P
&kp A      &kp S         &kp D         &kp F      &kp G        &mkp LCLK      &kp LC(C)      &kp H        &kp J  &kp K      &kp L    &lt_to_layer_0 5 MINUS
&kp Z      &kp X         &kp C         &kp V      &kp B        &kp LC(P)      &kp LC(V)      &kp N        &kp M  &kp COMMA  &kp DOT  &mt LS(NUMBER_2) AT_SIGN
&kp LCTRL  &kp LEFT_WIN  &kp LEFT_ALT  &lt 6 TAB  &lt 2 SPACE  &kp LSHFT      &kp BACKSPACE  &lt 2 ENTER                             &kp PRINTSCREEN
            >;

            sensor-bindings = <&ROTATE SCRL_DOWN SCRL_UP>;
        };

        FUNCTION {
            bindings = <
&trans     &kp N7        &kp N8    &kp N9  &trans                       &kp F1            &kp F7         &kp TILDE    &kp F4     &kp F5
&kp DEL    &kp N4        &kp N5    &kp N6  &trans  &trans      &kp F13  &kp AT            &kp PAGE_DOWN  &kp PAGE_UP  &kp LC(C)  &kp F10
&kp N0     &kp NUMBER_1  &kp N2    &kp N3  &trans  &trans      &trans   &kp LEFT_BRACKET  &mkp MB1       &mkp MB2     &kp LC(V)  &kp F11
&kp LCTRL  &kp NUMBER_0  &kp LALT  &trans  &trans  &trans      &trans   &trans                                                   &kp F12
            >;

            sensor-bindings = <&ROTATE SCRL_LEFT SCRL_RIGHT>;
        };

        NUM {
            bindings = <
&kp MINUS         &kp LS(NUMBER_6)  &kp LS(NUMBER_7)  &kp LS(NUMBER_8)  &kp PLUS                                              &kp F2            &kp AMPERSAND   &kp UP_ARROW    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp SLASH         &kp LS(NUMBER_3)  &kp LS(NUMBER_4)  &kp LS(NUMBER_5)  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &kp PLUS   &kp LC(F)         &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW       &kp LC(Z)
&kp LS(NUMBER_9)  &kp LS(NUMBER_0)  &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp PERIOD    &kp EQUAL                    &kp MINUS  &kp LEFT_BRACKET  &mkp MB1        &mkp MB2        &kp LC(V)             &kp BACKSLASH
&kp LC(ESC)       &trans            &trans            &trans            &trans        &trans                       &trans     &trans                                                                  &kp PIPE
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans    &trans     &trans     &trans     &trans                           &trans    &trans     &trans     &trans     &trans
&mkp MB4  &mkp LCLK  &mkp MCLK  &mkp RCLK  &mkp MB5  &mkp LCLK      &trans  &mkp MB4  &mkp LCLK  &mkp MCLK  &mkp RCLK  &mkp MB5
&trans    &trans     &trans     &trans     &trans    &mkp RCLK      &trans  &trans    &trans     &trans     &trans     &trans
&trans    &trans     &trans     &trans     &trans    &trans         &trans  &trans                                     &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                                 &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans     &trans      &studio_unlock  &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kt KP_N4  &trans      &bootloader     &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans     &trans      &trans          &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
